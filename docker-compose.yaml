version: "3.9"
name: scholar

services:
  web:
    build:
      context: .
      target: dev
    command: npm run dev
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - net

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - web
    networks:
      - net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email monashovnikolaye@gmail.com --agree-tos --no-eff-email --staging -d home-server.tech  -d www.home-server.tech


  db:
    container_name: db
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "scholar"]
      interval: 10s # retry after the database is ready
      timeout: 5s
      retries: 5
    networks:
      - net

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/mne/sourcels/scholar/scholar/
      o: bind
  db-data:

networks:
  app-network:
    driver: bridge  
  net:
